---
import Layout from './Layout.astro'
import RelatedPhotos from '../components/RelatedPhotos.astro'
import Icon from '@components/Icon.astro'
import {Image, Picture} from '@astrojs/image/components'

export async function getStaticPaths() {
  const photos = await Astro.glob('../pages/photos/*.md')

  return photos.map(photo => ({
    params: {
      slug: photo.frontmatter.slug,
    },
    props: {
      photo,
    },
  }))
}

const {frontmatter, url} = Astro.props

const currentCategories =
  frontmatter.categories && frontmatter.categories.map(category => category)

const photos = await Astro.glob('../pages/photos/*.md')
let filteredPhotos = []
const related = photos.map(
  i =>
    i.frontmatter.categories &&
    i.frontmatter.title !== frontmatter.title &&
    i.frontmatter.categories.filter(element => {
      if (currentCategories && currentCategories.includes(element)) {
        const obj = {
          layout: i.frontmatter.layout,
          title: i.frontmatter.title,
          slug: i.url,
          image: i.frontmatter.image,
        }
        filteredPhotos.push(obj)
      }
    })
)
const filteredUnique = [
  ...new Map(filteredPhotos.map(item => [item['slug'], item])).values(),
]
---

<Layout
  siteTitle={frontmatter.title}
  description={frontmatter.description}
  socialImage={frontmatter.image}
>
  <article
    class="w-full md:w-3/4 mx-auto p-6 grid grid-cols-1 gap-6 mb-6 md:mb-20 md:mt-20 text-sm md:text-base"
  >
    <header class="flex flex-col gap-4 border-b border-b-secondary pb-6">
      <h1 class="text-2xl md:text-3xl font-black">{frontmatter.title}</h1>

      {
        frontmatter.camera.model && (
          <div class="italic inline-flex items-center text-sm md:text-base">
            <Icon icon="photos" classes="w-5 h-5 stroke-secondary mr-2" />

            {frontmatter.camera.model}

            {frontmatter.camera.lens && ` with ${frontmatter.camera.lens}`}
          </div>
        )
      }

      <p class="flex gap-2">
        {
          currentCategories &&
            currentCategories.map(category => (
              <a
                class="px-3 border bg-neutral text-neutral-contrast rounded-full hover:ring-4 focus:ring-4 hover:ring-highlight focus:ring-highlight"
                href={`/photos/${category.toLowerCase().replaceAll(' ', '-')}`}
              >
                {category}
              </a>
            ))
        }
      </p>
    </header>

    <figure class="relative">
      <Image
        id="featured"
        class="max-w-full"
        src={frontmatter.image}
        alt={frontmatter.title}
        width={1500}
        loading="eager"
        aspectRatio={frontmatter.aspect ? frontmatter.aspect : `16:10`}
      />
      <figcaption class="italic text-sm md:text-base pt-1">
        <span>{frontmatter.title}</span>

        {frontmatter.author && <span>, {frontmatter.author}</span>}

        {
          frontmatter.date && (
            <date>, {new Date(frontmatter.date).toLocaleDateString()}</date>
          )
        }
      </figcaption>
    </figure>

    <div class="space-y-6 my-4 md:my-8">
      <slot />
    </div>

    {
      filteredPhotos.length > 0 && (
        <RelatedPhotos
          title="You might also like these"
          content={filteredUnique}
        />
      )
    }
  </article>
</Layout>
<!-- 
<script is:inline>
  document.getElementById('featured').onclick = function () {
    EXIF.getData(this, function () {
      myData = this

      console.log(myData.exifdata)
    })
  }
</script> -->
